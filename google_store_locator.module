<?php
/**
 * @file
 * Code for the Google Store Locator feature.
 */

include_once 'google_store_locator.features.inc';

/**
 * Implements hook_menu()
 *
 * By using a render array as the page callback for this menu item then we
 * can give the map and panel elements as much room as possible to breathe.
 */
function google_store_locator_menu() {

  $items[variable_get('gsl_display_path', 'store_locator')] = array(
    'title' => 'Store Locator',
    'description' => 'Store locator map using Google Store Location Library',
    'page callback' => 'google_store_locator_contents',
    'access arguments' => array('access site-wide contact form'),
  );
  $items['admin/config/search/google_store_locator'] = array(
    'title' => 'Google Store Locator',
    'description' => 'Google Store Locator Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_store_locator_admin_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'management',
    'weight' => 1,
  );
  return $items;
}

/**
 * Create admin form for Google Store Locator.
 */
function google_store_locator_admin_form($form, &$form_state) {
  $form['description'] = array(
    '#type' => 'item',
    '#title' => t('Google Store Locator'),
  );
  $form['google_store_locator']['gsl_csv_path'] = array(
    '#type' => 'textfield',
    '#title' => 'Where is the CSV file located?',
    '#default_value' => variable_get('gsl_csv_path', 'download/location-export'),
    '#required' => TRUE,
  );
  $form['google_store_locator']['gsl_display_path'] = array(
    '#type' => 'textfield',
    '#title' => 'What is the desired path for the store locator?',
    '#default_value' => variable_get('gsl_display_path', 'store_locator'),
    '#description' => 'By default it will be served from /store_locator',
    '#required' => TRUE,
  );
  $form = system_settings_form($form);
  $form['#submit'][] = 'menu_rebuild';
  return $form;
}

/**
 * The renderable array that attaches all necessary js files to the head
 * section of the page and generates the map and panel elements.
 */
function google_store_locator_contents() {

  drupal_add_js(array('gsl' => array('datapath' => variable_get('gsl_csv_path', 'download/location-export'))), 'setting');

  $output =  array(
    'google_maps_api' => array(
      '#attached' => array(
        'js' => array('//maps.googleapis.com/maps/api/js?sensor=false&libraries=places', 'external'),
      ),
    ),

    'google_ajax_api' => array(
      '#attached' => array(
        'js' => array('//ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js', 'external'),
      ),
    ),

    'compiled_js' => array(
      '#attached' => array(
        'js' => array(libraries_get_path('storelocator') . '/js/store-locator.compiled.js'),
      ),
    ),

    'data_feed_js' => array(
      '#attached' => array(
        'js' => array(drupal_get_path('module', 'google_store_locator') . '/js/data-feed.js'),
      ),
    ),

    'panel_js' => array(
      '#attached' => array(
        'js' => array(drupal_get_path('module', 'google_store_locator') . '/js/panel.js'),
      ),
    ),

    'style_sheet' => array(
      '#attached' => array(
        'css' => array(libraries_get_path('storelocator') . '/css/storelocator.css'),
      ),
    ),

    'styling' => array(
      '#type' => 'markup',
      '#markup' => '<style type="text/css">
                    body { font-family: sans-serif; }
                    #map-canvas, #panel { height: 500px; }
                    #panel { width: 300px; float: left; margin-right: 10px; }
                    #panel .feature-filter label { width: 130px; }
                    p.attribution, p.attribution a { color: #666; }
                    </style>'
    ),

    'panel_element' => array(
      '#type' => 'markup',
      '#markup' => '<div id="panel"></div>'
    ),

    'map_element' => array(
      '#type' => 'markup',
      '#markup' => '<div id="map-canvas"></div>'
    ),
  );

  return $output;
}
