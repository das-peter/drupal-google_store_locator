<?php
/**
 * @file
 * Code for the Google Store Locator feature.
 */

include_once 'google_store_locator.features.inc';

/**
 * Implements hook_menu().
 *
 * By using a render array as the page callback for this menu item then we
 * can give the map and panel elements as much room as possible to breathe.
 */
function google_store_locator_menu() {

  $items[variable_get('gsl_display_path', 'store_locator')] = array(
    'title' => 'Store Locator',
    'description' => 'Store locator map using Google Store Location Library',
    'page callback' => 'google_store_locator_contents',
    'access arguments' => array('access content'),
  );
  $items['admin/config/search/google_store_locator'] = array(
    'title' => 'Google Store Locator',
    'description' => 'Google Store Locator Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('google_store_locator_admin_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'management',
    'weight' => 1,
  );
  return $items;
}

/**
 * Create admin form for Google Store Locator.
 */
function google_store_locator_admin_form($form, &$form_state) {
  $form['description'] = array(
    '#type' => 'item',
    '#title' => t('Google Store Locator'),
  );
  $form['google_store_locator']['gsl_csv_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Where is the CSV file located?'),
    '#default_value' => variable_get('gsl_csv_path', 'download/location-export'),
    '#required' => TRUE,
  );
  $form['google_store_locator']['gsl_display_path'] = array(
    '#type' => 'textfield',
    '#title' => t('What is the desired path for the store locator?'),
    '#default_value' => variable_get('gsl_display_path', 'store_locator'),
    '#description' => t('By default it will be served from /store_locator'),
    '#required' => TRUE,
  );
  $form['google_store_locator']['gsl_map_long'] = array(
    '#type' => 'textfield',
    '#title' => t('Map center point (Longitude)'),
    '#default_value' => variable_get('gsl_map_long', '40'),
    '#element_validate' => array('element_validate_number'),
    '#required' => TRUE,
  );
  $form['google_store_locator']['gsl_map_lat'] = array(
    '#type' => 'textfield',
    '#title' => t('Map center point (Latitude)'),
    '#default_value' => variable_get('gsl_map_lat', '-100'),
    '#element_validate' => array('element_validate_number'),
    '#required' => TRUE,
  );
  $form['google_store_locator']['gsl_map_zoom'] = array(
    '#type' => 'textfield',
    '#title' => t('Default zoom level'),
    '#default_value' => variable_get('gsl_map_zoom', '4'),
    '#element_validate' => array('element_validate_integer'),
    '#description' => '0-21',
    '#required' => TRUE,
  );
  $form = system_settings_form($form);
  $form['#submit'][] = 'google_store_locator_admin_form_submit';
  return $form;
}

/**
 * Callback function for /store_locator in hook_menu().
 *
 * Builds the renderable array that attaches all necessary js files to the head
 * section of the page and generates the map and panel elements.
 */
function google_store_locator_contents() {

  drupal_add_js(array(
    'gsl' => array(
      'datapath' => variable_get('gsl_csv_path', 'download/location-export'),
      'mapzoom' => intval(variable_get('gsl_map_zoom', '4')),
      'maplong' => variable_get('gsl_map_long', '40'),
      'maplat' => variable_get('gsl_map_lat', '-100'))), 'setting');

  $output = array(
    'google_maps_api' => array(
      '#attached' => array(
        'js' => array('http://maps.googleapis.com/maps/api/js?sensor=false&libraries=places', 'external'),
      ),
    ),
    'compiled_js' => array(
      '#attached' => array(
        'js' => array(libraries_get_path('storelocator') . '/js/store-locator.compiled.js'),
      ),
    ),
    'panel_js' => array(
      '#attached' => array(
        'js' => array(drupal_get_path('module', 'google_store_locator') . '/js/panel.js'),
      ),
    ),

    'store_locator_sheet' => array(
      '#attached' => array(
        'css' => array(libraries_get_path('storelocator') . '/css/storelocator.css'),
      ),
    ),

    'elements_sheet' => array(
      '#attached' => array(
        'css' => array(drupal_get_path('module', 'google_store_locator') . '/theme/google_store_locator.css'),
      ),
    ),

    'panel_element' => array(
      '#type' => 'markup',
      '#markup' => '<div id="panel"></div>',
    ),

    'map_element' => array(
      '#type' => 'markup',
      '#markup' => '<div id="map-canvas"></div>',
    ),
  );

  return $output;
}

/**
 * Submit callback for google_store_locator_admin_form
 */
function google_store_locator_admin_form_submit($form, &$form_state) {
  menu_rebuild();
}

/**
 * Form validator for google_store_locator_admin_form
 */
function google_store_locator_admin_form_validate($form, &$form_state) {
  if($form_state['values']['gsl_map_zoom'] > 21 ||
$form_state['values']['gsl_map_zoom'] < 0) {
    form_set_error('gsl_map_zoom',
  t('Please enter a zoom level between 0 and 21.'));
  }
}
